type Chemical1 {
  patentno: String
  patenttile: String
  chemicaltype1: String
}

type Chemical2 {
  patentno: String
  patenttile: String
  chemicaltype2: String
}

type Chemical {
  patentno: String
  patenttile: String
  chemicaltype1: String
  chemicaltype2: String
}

type Mutation {
  findTitle(titleSearch: String!) : [Chemical]
    @cypher(
      statement: "MATCH (f) WHERE f.patenttile CONTAINS  $titleSearch RETURN f "
    )
}



type Query {
  totalChemical11: Int! @cypher(statement: "MATCH (e:Chemical1) RETURN COUNT(e)")
  totalChemical22: Int! @cypher(statement: "MATCH (f:Chemical2) RETURN COUNT(f)")
  listChemical2: [Chemical2]! @cypher(statement: "MATCH (f:Chemical2) RETURN (f) ORDER BY f.chemicaltype2")
  listChemical1: [Chemical1]! @cypher(statement: "MATCH (e:Chemical1) RETURN (e) ORDER BY e.chemicaltype1")
  listChemical11(patentno: String, patenttile: String, chemicaltype1: String): [Chemical1]
  listChemical22(patentno: String, patenttile: String, chemicaltype2: String): [Chemical2]
  listChemicall(patentno: String, patenttile: String, chemicaltype1: String, chemicaltype2: String): [Chemical]
  listChemical: [Chemical]! @cypher(statement: "MATCH (n) RETURN (n) ORDER BY n.patentno")
  filterChemical(titleSearch: String!): [Chemical]!   @cypher( statement: "MATCH (n) WHERE n.chemicaltype2 CONTAINS $titleSearch OR n.chemicaltype1 CONTAINS $titleSearch RETURN n.patentno, n.chemicaltype1, n.chemicaltype2")
  }
